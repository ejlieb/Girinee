{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIRINEE\\\\S07P22A202\\\\frontend\\\\src\\\\components\\\\mainpage\\\\G-2.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useInterval(callback, delay) {\n  _s();\n\n  const savedCallback = useRef(); // 최근에 들어온 callback을 저장할 ref를 하나 만든다.\n\n  useEffect(() => {\n    savedCallback.current = callback; // callback이 바뀔 때마다 ref를 업데이트 해준다.\n  }, [callback]);\n  useEffect(() => {\n    function tick() {\n      savedCallback.current(); // tick이 실행되면 callback 함수를 실행시킨다.\n    }\n\n    if (delay !== null) {\n      setTimeout(() => {\n        clearInterval(id);\n      }, 3120); // 만약 delay가 null이 아니라면 \n\n      let id = setInterval(tick, delay); // delay에 맞추어 interval을 새로 실행시킨다.\n\n      return () => clearInterval(id); // unmount될 때 clearInterval을 해준다.\n    }\n  }, [delay]); // delay가 바뀔 때마다 새로 실행된다.\n}\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nexport function Gtwo(props) {\n  _s2();\n\n  const {\n    nodes,\n    materials\n  } = useGLTF('/G-2.glb');\n  let [intensity, setIntensity] = useState(0);\n  let timer = useInterval(() => {\n    setIntensity(intensity + 0.01);\n    clearInterval(timer);\n    console.log('hi' + intensity);\n  }, 30);\n  return /*#__PURE__*/_jsxDEV(\"group\", { ...props,\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.mesh_5.geometry,\n      material: nodes.mesh_5.material,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        emissive: 'lightblue',\n        emissiveIntensity: intensity,\n        color: \"lightblue\",\n        roughness: 0,\n        metalness: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.mesh_6.geometry,\n      material: nodes.mesh_6.material,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        emissive: 'lightblue',\n        emissiveIntensity: intensity,\n        color: \"lightblue\",\n        roughness: 0,\n        metalness: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.mesh_7.geometry,\n      material: nodes.mesh_7.material,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"lightgray\",\n        roughness: 0,\n        metalness: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.mesh_8.geometry,\n      material: nodes.mesh_8.material,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"lightgray\",\n        roughness: 0,\n        metalness: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Gtwo, \"L/K6lyrZ0h83vXfsvVkvwSErttg=\", false, function () {\n  return [useGLTF, useInterval];\n});\n\n_c = Gtwo;\nuseGLTF.preload('/G-2.glb');\n\nvar _c;\n\n$RefreshReg$(_c, \"Gtwo\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useGLTF","useInterval","callback","delay","savedCallback","current","tick","setTimeout","clearInterval","id","setInterval","Gtwo","props","nodes","materials","intensity","setIntensity","timer","console","log","mesh_5","geometry","material","mesh_6","mesh_7","mesh_8","preload"],"sources":["C:/Users/user/Desktop/GIRINEE/S07P22A202/frontend/src/components/mainpage/G-2.js"],"sourcesContent":["/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef(); // 최근에 들어온 callback을 저장할 ref를 하나 만든다.\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback; // callback이 바뀔 때마다 ref를 업데이트 해준다.\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current(); // tick이 실행되면 callback 함수를 실행시킨다.\r\n    }\r\n    if (delay !== null) {\r\n      setTimeout(() => {\r\n        clearInterval(id)\r\n      }, 3120) // 만약 delay가 null이 아니라면 \r\n      let id = setInterval(tick, delay); // delay에 맞추어 interval을 새로 실행시킨다.\r\n      return () => clearInterval(id); // unmount될 때 clearInterval을 해준다.\r\n    }\r\n  }, [delay]); // delay가 바뀔 때마다 새로 실행된다.\r\n}\r\n\r\nexport function Gtwo(props) {\r\n  const { nodes, materials } = useGLTF('/G-2.glb')\r\n  let [intensity, setIntensity] = useState(0)\r\n  let timer = useInterval(() => {setIntensity(intensity + 0.01)\r\n  clearInterval(timer)\r\n  console.log('hi' + intensity)}, 30)\r\n  \r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <mesh geometry={nodes.mesh_5.geometry} material={nodes.mesh_5.material} >\r\n      <meshStandardMaterial attach=\"material\" emissive={'lightblue'} emissiveIntensity={intensity} color=\"lightblue\" roughness={0} metalness={0.3} />\r\n      </mesh>\r\n      <mesh geometry={nodes.mesh_6.geometry} material={nodes.mesh_6.material} >\r\n      <meshStandardMaterial attach=\"material\" emissive={'lightblue'} emissiveIntensity={intensity} color=\"lightblue\" roughness={0} metalness={0.3} />\r\n      </mesh>\r\n      <mesh geometry={nodes.mesh_7.geometry} material={nodes.mesh_7.material} >\r\n      <meshStandardMaterial attach=\"material\" color=\"lightgray\" roughness={0} metalness={0.5} />\r\n      </mesh>\r\n      <mesh geometry={nodes.mesh_8.geometry} material={nodes.mesh_8.material} >\r\n      <meshStandardMaterial attach=\"material\" color=\"lightgray\" roughness={0} metalness={0.5} />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/G-2.glb')\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}