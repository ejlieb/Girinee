{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIRINEE\\\\S07P22A202\\\\frontend\\\\src\\\\components\\\\game\\\\NormalLevelController.tsx\",\n    _s = $RefreshSig$();\n\n// Systems\nimport { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport axios from 'axios';\nimport Swal from 'sweetalert2'; // Other Component \n\nimport useRecorder from \"./useRecorder\";\nimport { setSecond, setCountDownNumber, setCntChord } from '../../features/chordgame/GameSlice'; // Material UI\n\nimport Button from '@mui/material/Button';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Stack } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NormalLevelController() {\n  _s();\n\n  // script\n  // 준비된 기타 코드셋 5개\n  const guitarChordSets = [['C', 'G', 'Am', 'F'], ['D', 'A', 'E', 'A'], ['Em', 'C', 'D', 'G'], ['C', 'D', 'Em', 'Bm'], ['G', 'D', 'Em', 'G']];\n  const [whichSet, setWhichSet] = useState(['', '', '', '']); // 녹음에 필요한 정보들\n\n  let [audioURL, isRecording, startRecording, stopRecording] = useRecorder(); // 디스패치로 사용자가 슬라이더로 선택하는 시간 초 변경, 설정된 초 가져오기\n\n  const chordSecond = useAppSelector(state => state.game.chordSecond);\n  const dispatch = useAppDispatch();\n\n  const handleChange = (event, newValue) => {\n    dispatch(setSecond(newValue));\n  }; // 카운트다운 숫자\n\n\n  let countDownNumber = useAppSelector(state => state.game.countDownNumber);\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: '#fff'\n      }\n    }\n  }); // 버튼 눌렀을 때 해당 코드 연습 화면으로 변경\n\n  let cntIdx = -2;\n\n  const startGame = () => {\n    const randomIdx = Math.floor(Math.random() * 5);\n    const cntChordset = guitarChordSets[randomIdx];\n    audioURL = \"\";\n    console.log(cntChordset);\n    cntIdx++; // console.log('cntIdx', cntIdx)\n\n    function plusIdx() {\n      startRecording(); // console.log('start recording')\n\n      if (cntIdx === -1) {\n        cntIdx++;\n        dispatch(setCntChord(cntChordset[cntIdx])); // console.log('cntIdx', cntIdx)\n      }\n    }\n\n    function flipChord() {\n      setInterval(function () {\n        if (cntIdx === 0 || cntIdx === 1 || cntIdx === 2) {\n          cntIdx++; // console.log('cntIdx', cntIdx)\n\n          dispatch(setCntChord(cntChordset[cntIdx]));\n        } else if (cntIdx === 3) {\n          stopRecording(); // console.log('stop recording')\n\n          cntIdx = -2;\n        }\n      }, chordSecond * 1000);\n    }\n\n    function toThree() {\n      dispatch(setCountDownNumber(3));\n    }\n\n    function toTwo() {\n      dispatch(setCountDownNumber(2));\n    }\n\n    function toOne() {\n      dispatch(setCountDownNumber(1));\n    }\n\n    function toFour() {\n      dispatch(setCountDownNumber(4));\n    }\n\n    toThree();\n    setTimeout(toTwo, 1000);\n    setTimeout(toOne, 2000);\n    setTimeout(toFour, 3000);\n    setTimeout(plusIdx, 3000);\n    setTimeout(flipChord, 3000);\n    setWhichSet(prev => cntChordset);\n  };\n\n  const accessToken = window.localStorage.getItem('accessToken');\n\n  const checkRecord = () => {\n    const fullFile = audioURL; // Wav 파일 헤더 추출\n\n    const wavHeader = fullFile.slice(0, 44); // 헤더를 제외한 나머지 파일\n\n    const fullAudio = fullFile.slice(44); // 헤더를 제외한 나머지 파일의 사이즈\n\n    const fullSize = fullAudio.size; // 4등분 사이즈\n\n    const quarterSize = Math.floor(fullSize / 4); // 4등분한 각 파일에 헤더 더하기\n\n    const audio_1 = new Blob([wavHeader, fullAudio.slice(0, quarterSize, 'audio/wav')], {\n      type: 'audio/wav'\n    });\n    const audio_2 = new Blob([wavHeader, fullAudio.slice(quarterSize, 2 * quarterSize, 'audio/wav')], {\n      type: 'audio/wav'\n    });\n    const audio_3 = new Blob([wavHeader, fullAudio.slice(2 * quarterSize, 3 * quarterSize, 'audio/wav')], {\n      type: 'audio/wav'\n    });\n    const audio_4 = new Blob([wavHeader, fullAudio.slice(3 * quarterSize, 4 * quarterSize, 'audio/wav')], {\n      type: 'audio/wav'\n    }); //console.log(fullAudio)\n    //console.log(fullAudio.size)\n    //console.log(whichSet)\n\n    const [chord_1, chord_2, chord_3, chord_4] = whichSet;\n    const data = new FormData();\n    data.append('files', audio_1, 'audio_1');\n    data.append('files', audio_2, 'audio_2');\n    data.append('files', audio_3, 'audio_3');\n    data.append('files', audio_4, 'audio_4');\n    data.append('chords', chord_1);\n    data.append('chords', chord_2);\n    data.append('chords', chord_3);\n    data.append('chords', chord_4);\n    data.append('difficulty', 'normal');\n    console.log(data); // Axios\n\n    axios.post('https://j7a202.p.ssafy.io/api/record/game', data, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(response.data);\n      const resultArr = response.data;\n      const scoreForChords = [\"\", \"\", \"\", \"\"];\n\n      for (let i = 0; i < 4; i++) {\n        if (resultArr[i].is_correct === false) {\n          // Bad\n          scoreForChords[i] = \"Bad\";\n        } else if (resultArr[i].is_correct === true && resultArr[i].score < 50) {\n          // SoSo\n          scoreForChords[i] = \"SoSo\";\n        } else if (resultArr[i].is_correct === true && resultArr[i].score >= 50 && resultArr[i].score < 70) {\n          // Good\n          scoreForChords[i] = \"Good\";\n        } else if (resultArr[i].is_correct === true && resultArr[i].score >= 70 && resultArr[i].score < 90) {\n          // Great\n          scoreForChords[i] = \"Great\";\n        } else if (resultArr[i].is_correct === true && resultArr[i].score >= 90) {\n          // perfect\n          scoreForChords[i] = \"Perfect\";\n        }\n      }\n\n      console.log(scoreForChords);\n      const resultString = `${chord_1} : ${scoreForChords[0]} / ${chord_2} : ${scoreForChords[1]} / ${chord_3} : ${scoreForChords[2]} / ${chord_4} : ${scoreForChords[3]} `;\n      Swal.fire({\n        title: resultString,\n        html: `이번 랜덤 코드세트는 ${chord_1} ➡ ${chord_2} ➡ ${chord_3} ➡ ${chord_4} 순으로 진행됐습니다.<br/>\n            결과는 'Perfect', 'Great', 'Good', 'SoSo', 'Bad'순으로 높은 점수입니다.<br/>\n            본인의 결과를 확인한 후 부족한 코드를 연습모드에서 연습해보세요!`,\n        confirmButtonText: '확인',\n        confirmButtonColor: '#777981',\n        customClass: 'swal-wide'\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }; // JSX\n\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    alignItems: \"center\",\n    spacing: 5,\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: \"normal-start-btn\",\n        variant: \"outlined\",\n        className: \"white-text\",\n        disabled: isRecording,\n        onClick: startGame,\n        children: \"\\uC2DC \\uC791 \\uD558 \\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: \"normal-check-btn\",\n        variant: \"outlined\",\n        className: \"white-text\",\n        disabled: isRecording || audioURL === \"\",\n        onClick: checkRecord,\n        children: \"\\uCC44 \\uC810 \\uD558 \\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NormalLevelController, \"+dETYZ9SJb8y9ClQDzHKblt07b8=\", false, function () {\n  return [useRecorder, useAppSelector, useAppDispatch, useAppSelector];\n});\n\n_c = NormalLevelController;\n\nvar _c;\n\n$RefreshReg$(_c, \"NormalLevelController\");","map":{"version":3,"names":["useState","useAppDispatch","useAppSelector","axios","Swal","useRecorder","setSecond","setCountDownNumber","setCntChord","Button","createTheme","ThemeProvider","Stack","NormalLevelController","guitarChordSets","whichSet","setWhichSet","audioURL","isRecording","startRecording","stopRecording","chordSecond","state","game","dispatch","handleChange","event","newValue","countDownNumber","theme","palette","primary","main","cntIdx","startGame","randomIdx","Math","floor","random","cntChordset","console","log","plusIdx","flipChord","setInterval","toThree","toTwo","toOne","toFour","setTimeout","prev","accessToken","window","localStorage","getItem","checkRecord","fullFile","wavHeader","slice","fullAudio","fullSize","size","quarterSize","audio_1","Blob","type","audio_2","audio_3","audio_4","chord_1","chord_2","chord_3","chord_4","data","FormData","append","post","headers","Authorization","then","response","resultArr","scoreForChords","i","is_correct","score","resultString","fire","title","html","confirmButtonText","confirmButtonColor","customClass","catch","error"],"sources":["C:/Users/user/Desktop/GIRINEE/S07P22A202/frontend/src/components/game/NormalLevelController.tsx"],"sourcesContent":["// Systems\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { AnimatePresence } from 'framer-motion'\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n// Other Component \r\nimport useRecorder from \"./useRecorder\"\r\nimport { setSecond, setCountDownNumber, setCntChord } from '../../features/chordgame/GameSlice'\r\n\r\n// Material UI\r\nimport Button from '@mui/material/Button'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\r\nimport { Stack } from '@mui/system'\r\nimport { DataArray } from '@mui/icons-material'\r\n\r\n\r\nexport function NormalLevelController() {\r\n    // script\r\n    // 준비된 기타 코드셋 5개\r\n    const guitarChordSets = [['C', 'G', 'Am', 'F'], ['D', 'A', 'E', 'A'], ['Em', 'C', 'D', 'G'],['C', 'D', 'Em', 'Bm'],['G', 'D', 'Em', 'G']]\r\n\r\n    const [whichSet, setWhichSet] = useState(['','','',''])\r\n\r\n    // 녹음에 필요한 정보들\r\n    let [audioURL, isRecording, startRecording, stopRecording]:any[] = useRecorder()\r\n\r\n    // 디스패치로 사용자가 슬라이더로 선택하는 시간 초 변경, 설정된 초 가져오기\r\n    const chordSecond:number = useAppSelector((state) => state.game.chordSecond)\r\n    const dispatch = useAppDispatch()\r\n    const handleChange = (event: Event, newValue: number | number[]) => {\r\n      dispatch(setSecond(newValue as number));\r\n    }\r\n\r\n    // 카운트다운 숫자\r\n    let countDownNumber:number = useAppSelector((state) => state.game.countDownNumber)\r\n    \r\n    const theme = createTheme({\r\n      palette: {\r\n        primary: {\r\n          main: '#fff',          \r\n        },\r\n      },\r\n    })   \r\n\r\n    // 버튼 눌렀을 때 해당 코드 연습 화면으로 변경\r\n    let cntIdx = -2\r\n\r\n    const startGame = () => {\r\n      const randomIdx = Math.floor(Math.random() * 5)\r\n      const cntChordset = guitarChordSets[randomIdx]\r\n\r\n      audioURL = \"\"\r\n      \r\n      console.log(cntChordset);\r\n      \r\n      cntIdx++\r\n\r\n      // console.log('cntIdx', cntIdx)\r\n      function plusIdx() {\r\n          startRecording()\r\n          // console.log('start recording')\r\n          if (cntIdx === -1) {\r\n            cntIdx++\r\n            dispatch(setCntChord(cntChordset[cntIdx] as string))\r\n            // console.log('cntIdx', cntIdx)\r\n          }\r\n        }\r\n\r\n      function flipChord() {setInterval(function() {\r\n          if (cntIdx === 0 || cntIdx === 1 || cntIdx === 2) {\r\n            cntIdx++\r\n            // console.log('cntIdx', cntIdx)\r\n            dispatch(setCntChord(cntChordset[cntIdx] as string))\r\n          } else if (cntIdx === 3) {\r\n            stopRecording()\r\n            // console.log('stop recording')\r\n            cntIdx = -2\r\n          }\r\n        }, chordSecond*1000)\r\n      }\r\n\r\n      function toThree() {\r\n        dispatch(setCountDownNumber(3))\r\n      }\r\n      function toTwo() {\r\n        dispatch(setCountDownNumber(2))\r\n      }\r\n      function toOne() {\r\n        dispatch(setCountDownNumber(1))\r\n      }\r\n      function toFour() {\r\n        dispatch(setCountDownNumber(4))\r\n      }\r\n\r\n      toThree()\r\n      setTimeout(toTwo, 1000)\r\n      setTimeout(toOne, 2000)\r\n      setTimeout(toFour, 3000)\r\n      setTimeout(plusIdx, 3000)\r\n      setTimeout(flipChord, 3000)\r\n      setWhichSet((prev) => cntChordset)\r\n    }\r\n\r\n    const accessToken = window.localStorage.getItem('accessToken')\r\n\r\n    const checkRecord = () => {\r\n      const fullFile = audioURL\r\n      // Wav 파일 헤더 추출\r\n      const wavHeader = fullFile.slice(0, 44)\r\n      // 헤더를 제외한 나머지 파일\r\n      const fullAudio = fullFile.slice(44)\r\n\r\n      // 헤더를 제외한 나머지 파일의 사이즈\r\n      const fullSize = fullAudio.size\r\n      // 4등분 사이즈\r\n      const quarterSize = Math.floor(fullSize / 4)\r\n\r\n      // 4등분한 각 파일에 헤더 더하기\r\n      const audio_1 = new Blob([wavHeader, fullAudio.slice(0, quarterSize, 'audio/wav')], {type: 'audio/wav'})\r\n      const audio_2 = new Blob([wavHeader, fullAudio.slice(quarterSize, 2*quarterSize, 'audio/wav')], {type: 'audio/wav'})\r\n      const audio_3 = new Blob([wavHeader, fullAudio.slice(2*quarterSize, 3*quarterSize, 'audio/wav')], {type: 'audio/wav'})\r\n      const audio_4 = new Blob([wavHeader, fullAudio.slice(3*quarterSize, 4*quarterSize, 'audio/wav')], {type: 'audio/wav'})\r\n\r\n  \r\n      //console.log(fullAudio)\r\n      //console.log(fullAudio.size)\r\n      //console.log(whichSet)\r\n      \r\n      const [chord_1, chord_2, chord_3, chord_4] = whichSet\r\n\r\n      const data = new FormData()\r\n      data.append('files', audio_1, 'audio_1')\r\n      data.append('files', audio_2, 'audio_2')\r\n      data.append('files', audio_3, 'audio_3')\r\n      data.append('files', audio_4, 'audio_4')\r\n      data.append('chords', chord_1)\r\n      data.append('chords', chord_2)\r\n      data.append('chords', chord_3)\r\n      data.append('chords', chord_4)\r\n      data.append('difficulty', 'normal')\r\n      console.log(data)\r\n\r\n      // Axios\r\n      axios.post('https://j7a202.p.ssafy.io/api/record/game', data, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          'Content-Type': 'multipart/form-data',\r\n          },\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data)\r\n          const resultArr = response.data\r\n          const scoreForChords:string[] = [\"\", \"\", \"\", \"\"]\r\n\r\n          for (let i = 0; i < 4; i++) {\r\n            if ( resultArr[i].is_correct === false) {\r\n              // Bad\r\n              scoreForChords[i] = \"Bad\"\r\n            } else if (resultArr[i].is_correct === true && resultArr[i].score < 50) {\r\n              // SoSo\r\n              scoreForChords[i] = \"SoSo\"\r\n            } else if (resultArr[i].is_correct === true && resultArr[i].score >= 50 && resultArr[i].score < 70) {\r\n              // Good\r\n              scoreForChords[i] = \"Good\"\r\n            } else if (resultArr[i].is_correct === true && resultArr[i].score >= 70 && resultArr[i].score < 90) {\r\n              // Great\r\n              scoreForChords[i] = \"Great\"\r\n            } else if (resultArr[i].is_correct === true && resultArr[i].score >= 90) {\r\n              // perfect\r\n              scoreForChords[i] = \"Perfect\"\r\n            }\r\n          }\r\n\r\n          console.log(scoreForChords)\r\n          const resultString = `${chord_1} : ${scoreForChords[0]} / ${chord_2} : ${scoreForChords[1]} / ${chord_3} : ${scoreForChords[2]} / ${chord_4} : ${scoreForChords[3]} `\r\n\r\n          Swal.fire({\r\n            title: resultString,\r\n            html: `이번 랜덤 코드세트는 ${chord_1} ➡ ${chord_2} ➡ ${chord_3} ➡ ${chord_4} 순으로 진행됐습니다.<br/>\r\n            결과는 'Perfect', 'Great', 'Good', 'SoSo', 'Bad'순으로 높은 점수입니다.<br/>\r\n            본인의 결과를 확인한 후 부족한 코드를 연습모드에서 연습해보세요!`,\r\n            confirmButtonText: '확인',\r\n            confirmButtonColor: '#777981',\r\n            customClass: 'swal-wide'\r\n          })\r\n        })\r\n        .catch((error)=> {\r\n          console.log(error)\r\n        })\r\n    }\r\n      \r\n    // JSX\r\n    return (\r\n      <Stack alignItems=\"center\" spacing={5}>\r\n        <ThemeProvider theme={theme}>\r\n          <Button id=\"normal-start-btn\" variant=\"outlined\" className=\"white-text\" disabled={isRecording} onClick={startGame}>시 작 하 기</Button>\r\n        </ThemeProvider>\r\n        <ThemeProvider theme={theme}>\r\n          <Button id=\"normal-check-btn\" variant=\"outlined\" className=\"white-text\" disabled={isRecording || audioURL===\"\"} onClick={checkRecord}>채 점 하 기</Button>\r\n        </ThemeProvider>\r\n      </Stack>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}