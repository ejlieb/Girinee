{"ast":null,"code":"export const createBlobEventFactory = nativeBlobEventConstructor => {\n  return (type, blobEventInit) => {\n    if (nativeBlobEventConstructor === null) {\n      throw new Error('A native BlobEvent could not be created.');\n    }\n\n    return new nativeBlobEventConstructor(type, blobEventInit);\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,sBAAsB,GAA8BC,0BAAD,IAA+B;EAC3F,OAAO,CAACC,IAAD,EAAOC,aAAP,KAAwB;IAC3B,IAAIF,0BAA0B,KAAK,IAAnC,EAAyC;MACrC,MAAM,IAAIG,KAAJ,CAAU,0CAAV,CAAN;IACH;;IAED,OAAO,IAAIH,0BAAJ,CAA+BC,IAA/B,EAAqCC,aAArC,CAAP;EACH,CAND;AAOH,CARM","names":["createBlobEventFactory","nativeBlobEventConstructor","type","blobEventInit","Error"],"sources":["C:\\Users\\user\\Desktop\\GIRINEE\\S07P22A202\\frontend\\node_modules\\extendable-media-recorder\\src\\factories\\blob-event-factory.ts"],"sourcesContent":["import { TBlobEventFactoryFactory } from '../types';\n\nexport const createBlobEventFactory: TBlobEventFactoryFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        if (nativeBlobEventConstructor === null) {\n            throw new Error('A native BlobEvent could not be created.');\n        }\n\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n"]},"metadata":{},"sourceType":"module"}