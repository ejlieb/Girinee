{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIRINEE\\\\S07P22A202\\\\frontend\\\\src\\\\components\\\\game\\\\NormalLevelController.tsx\",\n    _s = $RefreshSig$();\n\n// Systems\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'; // Other Component \n\nimport useRecorder from \"./useRecorder\";\nimport { setSecond } from '../../features/chordgame/GameSlice';\nimport { setCntChord } from '../../features/chordgame/GameSlice'; // Material UI\n\nimport Button from '@mui/material/Button';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Stack } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NormalLevelController() {\n  _s();\n\n  // script\n  // 준비된 기타 코드셋 5개\n  const guitarChordSets = [['A', 'B', 'C', 'D'], ['B', 'C', 'D', 'E'], ['C', 'D', 'E', 'F'], ['D', 'E', 'F', 'G'], ['E', 'F', 'G', 'A']]; // 녹음에 필요한 정보들\n\n  const [audioURL, isRecording, startRecording, stopRecording] = useRecorder(); // 디스패치로 사용자가 슬라이더로 선택하는 시간 초 변경, 설정된 초 가져오기\n\n  const chordSecond = useAppSelector(state => state.game.chordSecond);\n  const dispatch = useAppDispatch();\n\n  const handleChange = (event, newValue) => {\n    dispatch(setSecond(newValue));\n  };\n\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: '#fff'\n      }\n    }\n  }); // 버튼 눌렀을 때 해당 코드 연습 화면으로 변경\n\n  const startGame = () => {\n    const randomIdx = Math.floor(Math.random() * 5);\n    const cntChordset = guitarChordSets[randomIdx];\n    console.log(cntChordset);\n    setTimeout(startRecording(), chordSecond * 1000);\n    let cntIdx = -1;\n    setInterval(function () {\n      if (cntIdx !== 3) {\n        cntIdx++;\n        dispatch(setCntChord(cntChordset[cntIdx]));\n      } else {\n        setTimeout(stopRecording());\n      }\n    }, chordSecond * 1000);\n  }; // JSX\n\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        variant: \"outlined\",\n        className: \"white-text\",\n        disabled: isRecording,\n        onClick: startGame,\n        children: \"\\uC2DC\\uC791\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NormalLevelController, \"HBPRRAo6itjFpdwVOKOkIdiWjJE=\", false, function () {\n  return [useRecorder, useAppSelector, useAppDispatch];\n});\n\n_c = NormalLevelController;\n\nvar _c;\n\n$RefreshReg$(_c, \"NormalLevelController\");","map":{"version":3,"names":["useAppDispatch","useAppSelector","useRecorder","setSecond","setCntChord","Button","createTheme","ThemeProvider","Stack","NormalLevelController","guitarChordSets","audioURL","isRecording","startRecording","stopRecording","chordSecond","state","game","dispatch","handleChange","event","newValue","theme","palette","primary","main","startGame","randomIdx","Math","floor","random","cntChordset","console","log","setTimeout","cntIdx","setInterval"],"sources":["C:/Users/user/Desktop/GIRINEE/S07P22A202/frontend/src/components/game/NormalLevelController.tsx"],"sourcesContent":["// Systems\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { AnimatePresence } from 'framer-motion'\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\r\n\r\n// Other Component \r\nimport useRecorder from \"./useRecorder\"\r\nimport { setSecond } from '../../features/chordgame/GameSlice'\r\nimport { setCntChord } from '../../features/chordgame/GameSlice'\r\n\r\n// Material UI\r\nimport Button from '@mui/material/Button'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\r\nimport { Stack } from '@mui/system'\r\n\r\n\r\nexport function NormalLevelController() {\r\n    // script\r\n    // 준비된 기타 코드셋 5개\r\n    const guitarChordSets = [['A', 'B', 'C', 'D'], ['B', 'C', 'D', 'E'], ['C', 'D', 'E', 'F'],['D', 'E', 'F', 'G'],['E', 'F', 'G', 'A']]\r\n\r\n    // 녹음에 필요한 정보들\r\n    const [audioURL, isRecording, startRecording, stopRecording]:any[] = useRecorder()\r\n\r\n    // 디스패치로 사용자가 슬라이더로 선택하는 시간 초 변경, 설정된 초 가져오기\r\n    const chordSecond:number = useAppSelector((state) => state.game.chordSecond)\r\n    const dispatch = useAppDispatch()\r\n    const handleChange = (event: Event, newValue: number | number[]) => {\r\n      dispatch(setSecond(newValue as number));\r\n    }\r\n    \r\n    const theme = createTheme({\r\n      palette: {\r\n        primary: {\r\n          main: '#fff',          \r\n        },\r\n      },\r\n    })   \r\n\r\n    // 버튼 눌렀을 때 해당 코드 연습 화면으로 변경\r\n    const startGame = () => {\r\n      const randomIdx = Math.floor(Math.random() * 5)\r\n      const cntChordset = guitarChordSets[randomIdx]\r\n      console.log(cntChordset);\r\n\r\n      setTimeout(startRecording(), chordSecond * 1000)\r\n\r\n      let cntIdx = -1      \r\n      setInterval(function() {\r\n        if (cntIdx !== 3) {\r\n          cntIdx++\r\n          dispatch(setCntChord(cntChordset[cntIdx] as string))\r\n        } else {\r\n          setTimeout(stopRecording())\r\n        } \r\n      }, chordSecond * 1000)      \r\n    }\r\n      \r\n    // JSX\r\n    return (\r\n      <Stack alignItems=\"center\">\r\n        <ThemeProvider theme={theme}>\r\n          <Button size=\"large\" variant=\"outlined\" className=\"white-text\" disabled={isRecording} onClick={startGame}>시작하기</Button>\r\n        </ThemeProvider>\r\n      </Stack>\r\n    )\r\n}"],"mappings":";;;AAAA;AAIA,SAASA,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,WAAT,QAA4B,oCAA5B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,sBAA3C;AACA,SAASC,KAAT,QAAsB,aAAtB;;AAGA,OAAO,SAASC,qBAAT,GAAiC;EAAA;;EACpC;EACA;EACA,MAAMC,eAAe,GAAG,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAD,EAAuB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAvB,EAA6C,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAA7C,EAAkE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAlE,EAAuF,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAvF,CAAxB,CAHoC,CAKpC;;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,EAAwBC,cAAxB,EAAwCC,aAAxC,IAA+DZ,WAAW,EAAhF,CANoC,CAQpC;;EACA,MAAMa,WAAkB,GAAGd,cAAc,CAAEe,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,WAAvB,CAAzC;EACA,MAAMG,QAAQ,GAAGlB,cAAc,EAA/B;;EACA,MAAMmB,YAAY,GAAG,CAACC,KAAD,EAAeC,QAAf,KAA+C;IAClEH,QAAQ,CAACf,SAAS,CAACkB,QAAD,CAAV,CAAR;EACD,CAFD;;EAIA,MAAMC,KAAK,GAAGhB,WAAW,CAAC;IACxBiB,OAAO,EAAE;MACPC,OAAO,EAAE;QACPC,IAAI,EAAE;MADC;IADF;EADe,CAAD,CAAzB,CAfoC,CAuBpC;;EACA,MAAMC,SAAS,GAAG,MAAM;IACtB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAlB;IACA,MAAMC,WAAW,GAAGrB,eAAe,CAACiB,SAAD,CAAnC;IACAK,OAAO,CAACC,GAAR,CAAYF,WAAZ;IAEAG,UAAU,CAACrB,cAAc,EAAf,EAAmBE,WAAW,GAAG,IAAjC,CAAV;IAEA,IAAIoB,MAAM,GAAG,CAAC,CAAd;IACAC,WAAW,CAAC,YAAW;MACrB,IAAID,MAAM,KAAK,CAAf,EAAkB;QAChBA,MAAM;QACNjB,QAAQ,CAACd,WAAW,CAAC2B,WAAW,CAACI,MAAD,CAAZ,CAAZ,CAAR;MACD,CAHD,MAGO;QACLD,UAAU,CAACpB,aAAa,EAAd,CAAV;MACD;IACF,CAPU,EAORC,WAAW,GAAG,IAPN,CAAX;EAQD,CAhBD,CAxBoC,CA0CpC;;;EACA,oBACE,QAAC,KAAD;IAAO,UAAU,EAAC,QAAlB;IAAA,uBACE,QAAC,aAAD;MAAe,KAAK,EAAEO,KAAtB;MAAA,uBACE,QAAC,MAAD;QAAQ,IAAI,EAAC,OAAb;QAAqB,OAAO,EAAC,UAA7B;QAAwC,SAAS,EAAC,YAAlD;QAA+D,QAAQ,EAAEV,WAAzE;QAAsF,OAAO,EAAEc,SAA/F;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOH;;GAlDejB,qB;UAMyDP,W,EAG1CD,c,EACVD,c;;;KAVLS,qB"},"metadata":{},"sourceType":"module"}